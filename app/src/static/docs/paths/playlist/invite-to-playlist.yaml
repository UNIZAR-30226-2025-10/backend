post:
  summary: Añadir un usuario como invitado a una playlist
  description: |
        Permite a un usuario añadir a otro usuario (que no sea ni creador ni participante) como invitado a una playlist, si es su creador.
        ### WebSocket:
        Si la invitación es exitosa, se emite un evento WebSocket `invite-to-playlist-ws` al usuario invitado si esta logueado.
        - **Schema**:
        ```json
          {   
            nombre                    string
                                      nombre (nombre de usuario o nombre artistico) del usuario logueado
            nombreUsuario             string
                                      nombre de usuario del usuario logueado
            fotoPerfil                string
                                      link cloudinary de la foto de perfil del usuario logueado
            tipo                      string ∈ ["oyente", "artista"]
                                      tipo del usuario logueado
          }
        ```
        - **Example Value**:
        ```json
          {
            "nombre":"usuario1",
            "nombreUsuario":"usuario1",
            "fotoPortada": "https://example.com/usuario1.jpg",
            "tipo": "oyente"
          }
        ```
  security:
    - bearerAuth: []
  tags:
    - Playlist
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            nombreUsuario:
              type: string
              description: Nombre de usuario del invitado
            playlist:
              type: integer
              description: ID de la playlist
        example:
          nombreUsuario: "usuario123"
          playlist: 4
  responses:
    201:
      description: Usuario invitado a la playlist exitosamente.
      content:
        application/json:
          schema:
            type: string
            example: ""
    400:
      description: Datos incorrectos o faltantes en la solicitud.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Faltan datos requeridos."
    401:
      description: Usuario no autenticado
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Token inválido"
    403:
      description: Usuario autenticado sin permisos para la accion
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Acceso denegado."
    404:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "La playlist no existe."
    409:
      description: Conflicto con el estado actual del recurso.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "El usuario ya ha sido invitado a participar en la playlist."
    500:
      description: Error interno del servidor
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Ha ocurrido un error inesperado."
              details:
                type: string
                example: "Error de base de datos"

