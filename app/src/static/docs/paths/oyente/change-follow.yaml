put:
  summary: Seguir o dejar de seguir a un usuario
  description: |
        Permite a un usuario autenticado seguir o dejar de seguir a otro usuario, proporcionando su nombre de usuario y el estado deseado (`siguiendo`).

        ### WebSocket:
        Si el usuario logueado sigue a otro, se emite un evento WebSocket `nuevo-seguidor-ws` a dicho usuario si está logueado.
        - **Schema**:
        ```json
          {   
            nombre                    string
                                      nombre (nombre de usuario o nombre artistico) del usuario logueado
            nombreUsuario             string
                                      nombre de usuario del usuario logueado
            fotoPerfil                string
                                      link cloudinary de la foto de perfil del usuario logueado
            tipo                      string ∈ ["oyente", "artista"]
                                      tipo del usuario logueado
          }
        ```
        - **Example Value**:
        ```json
          {
            "nombre":"usuario1",
            "nombreUsuario":"usuario1",
            "fotoPortada": "https://example.com/usuario1.jpg",
            "tipo": "oyente"
          }
        ```
  security:
    - bearerAuth: []
  tags:
    - Oyente
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            nombreUsuario:
              type: string
              description: Nombre de usuario del usuario a seguir o dejar de seguir
            siguiendo:
              type: boolean
              description: true para seguir, false para dejar de seguir
          required:
            - nombreUsuario
            - siguiendo
        example:
          nombreUsuario: "juan123"
          siguiendo: true
  responses:
    200:
      description: Estado de seguimiento actualizado correctamente.
      content:
        application/json:
          schema:
            type: string
            example: ""
    400:
      description: Datos incorrectos o faltantes en la solicitud.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Faltan campos en la peticion."
    401:
      description: Usuario no autenticado.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Token inválido"
    403:
      description: Usuario autenticado sin permisos para la acción.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Acceso denegado."
    404:
      description: Usuario no encontrado o no sigues a este usuario.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type
