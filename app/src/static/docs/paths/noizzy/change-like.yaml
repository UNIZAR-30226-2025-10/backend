put:
  summary: Actualiza el estado de like de un noizzy
  description: | 
        Permite a un usuario autenticado dar o quitar like a un noizzy.

        ### WebSocket:
        Si el usuario da like, se emite un evento WebSocket `nueva-interaccion-ws` al usuario del noizzy con el que se interactúa.
        - **Schema**:
        ```json
          {   
            nombreUsuario             string
                                      nombre de usuario del usuario que da like
            nombre                    string
                                      nombre visible del usuario que da like (nombre de usuario si es oyente, nombre artístico si es artista)
            fotoPerfil                string
                                      link cloudinary de la foto de perfil del usuario que da like
            noizzy                    integer
                                      ID del noizzy con el que se interactúa
            noizzito                  integer
                                      None
            texto                     string
                                      texto del noizzy con el que se interactúa
            tipo                      string
                                      "like"
          }
        ```
        - **Example Value**:
        ```json
          { 
            "nombreUsuario":"usuario1",
            "nombre": "usuario1",
            "fotoPerfil": "https://example.com/usuario1.jpg",
            "noizzy":87 ,
            "noizzito": None,
            "texto": "Texto del noizzy",
            "tipo": "like"
          }
        ```
  security:
    - bearerAuth: []
  tags:
    - Noizzy
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            like:
              type: boolean
              description: Indica si se da (true) o se quita (false) el like.
            noizzy:
              type: integer
              description: ID del noizzy al que se le da o quita like.
        example:
          like: true
          noizzy: 15
  responses:
    200:
      description: Like actualizado correctamente.
    400:
      description: Datos incorrectos o faltantes en la solicitud.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
          example:
            error: "Faltan campos en la petición."
    401:
      description: Usuario no autenticado.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
          example:
            error: "No tienes permisos para realizar esta acción."
    403:
      description: Usuario autenticado sin permisos para la acción.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
          example:
            error: "Acceso denegado."
    404:
      description: Recurso no encontrado.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
          example:
            error: "El noizzy no existe."
    409:
      description: El usuario ya ha dado like a este noizzy.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
          example:
            error: "Ya has dado like a este noizzy."
    500:
      description: Ha ocurrido un error inesperado.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              details:
                type: string
          example:
            error: "Ha ocurrido un error inesperado."
            details: "Error de base de datos."
